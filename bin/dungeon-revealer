#!/usr/bin/env node
"use strict";

require("debug")("dungeon-revealer");
const app = require("../server");
const http = app.http;
const os = require("os");
const ifaces = os.networkInterfaces();

app.set("port", process.env.PORT || 3000);
app.set("host", process.env.HOST || "0.0.0.0");

const server = http.listen(app.get("port"), app.get("host"), () => {
  const port = server.address().port;
  const baseAddress = `http://localhost:${port}`;

  console.log(`Starting dungeon-revealer.\n`);

  console.log(`DM Section: ${baseAddress}/dm`);

  // This code borrowed from a SO answer
  Object.keys(ifaces).forEach(ifname => {
    const alias = 0;

    ifaces[ifname].forEach(iface => {
      if ("IPv4" !== iface.family || iface.internal !== false) {
        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses
        return;
      }

      if (alias >= 1) {
        // this single interface has multiple ipv4 addresses
        //console.log(ifname + ':' + alias, iface.address);
      } else {
        // this interface has only one ipv4 adress
        const publicAddress = `http://${iface.address}:${port}`;
        console.log(`Player Section: ${publicAddress}\n`);
      }
    });
  });
});
