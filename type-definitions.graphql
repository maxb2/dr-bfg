### THIS FILE IS AUTO GENERATED

type ChatMessage {
  id: ID!
  authorName: String!
  rawContent: [ChatMessageNode!]!
  createdAt: String!
}

type ChatMessageConnection {
  edges: [ChatMessageEdge!]!
  pageInfo: PageInfo!
}

input ChatMessageCreateInput {
  rawContent: String!
  authorName: String!
}

type ChatMessageDiceRollNode {
  content: DiceRollResult!
}

type ChatMessageEdge {
  cursor: String!
  node: ChatMessage!
}

union ChatMessageNode = ChatMessageDiceRollNode | ChatMessageTextNode

type ChatMessagesAddedSubscription {
  messages: [ChatMessage!]!
}

type ChatMessageTextNode {
  textContent: String!
}

type DiceRoll {
  result: Int!
}

union DiceRollResult = InvalidDiceRoll | DiceRoll

type InvalidDiceRoll {
  content: String!
}

type Mutation {
  chatMessageCreate(input: ChatMessageCreateInput!): Boolean
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String!
  endCursor: String!
}

type Query {
  chat(first: Int, after: ID): ChatMessageConnection!
}

type Subscription {
  chatMessagesAdded: ChatMessagesAddedSubscription!
}
