name: Build Binaries

on:
  push:
    tags:
      - "v*"

jobs:

  job_build:
    name: ${{ matrix.os }} Binaries
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Install Dependencies
        run: |
          npm install

      - name: Build Code
        run: |
          npm run build

      - name: Compile x64 binary
        id: compile
        run: |
          node ./scripts/copy-node-bindings-path.js
          npm run compile

      - name: Package binary
        run: |
          mkdir dungeon-revealer-${{ matrix.os }}
          mv ./bin/dungeon-revealer* ./dungeon-revealer-${{ matrix.os }}/
          mv ./node_sqlite3.node ./dungeon-revealer-${{ matrix.os }}/
          mv ./LICENSE ./dungeon-revealer-${{ matrix.os }}/
          mv ./README.md ./dungeon-revealer-${{ matrix.os }}/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dungeon-revealer-${{ matrix.os }}
          path: "dungeon-revealer-${{ matrix.os }}/"


  job_build_arm:
    name: ARM Linux Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build arm
        run: |
          echo "unsafe-perm = true" > .npmrc
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker run --rm -v $(pwd):/usr/src/app/ arm32v7/node:10 /bin/sh -c 'cd /usr/src/app/ && export NODE_OPTIONS=--max_old_space_size=3072 && npm install && npm run build && node ./scripts/copy-node-bindings-path.js && npm run compile:armv7 && cp node_sqlite3.node bin/'

      - name: Package binary
        run: |
          mkdir dungeon-revealer-linux-armv7
          mv ./bin/dungeon-revealer-linux-armv7 ./dungeon-revealer-linux-armv7/
          mv ./bin/node_sqlite3.node ./dungeon-revealer-linux-armv7/
          mv ./LICENSE ./dungeon-revealer-linux-armv7/
          mv ./README.md ./dungeon-revealer-linux-armv7/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dungeon-revealer-linux-armv7
          path: "dungeon-revealer-linux-armv7/"

  job_upload:
    name: Upload Release Assets
    needs: [job_build, job_build_arm]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Set environment
        run: |
          node ./scripts/set-git-tag-env.js

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - uses: actions/download-artifact@v2
        with:
          path: bin/

      # Zip all artifacts
      - name: Zip Archives
        run: |
          cd bin
          chmod +x ./dungeon-revealer-macos/dungeon-revealer-macos
          chmod +x ./dungeon-revealer-ubuntu/dungeon-revealer-linux
          chmod +x ./dungeon-revealer-linux-armv7/dungeon-revealer-linux-armv7
          for idir in */;
          do
            (cd "$idir"; rm dungeon-revealer || true; zip -r "../${idir%/}.zip" .);
          done

      # We have to upload assets individually using upload-release-asset@v1
      # There isn't a matrix for steps.
      - name: Upload Linux Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./bin/dungeon-revealer-ubuntu.zip
          asset_name: dungeon-revealer-linux-${{ env.GH_TAG }}.zip
          asset_content_type: application/zip

      - name: Upload MacOS Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./bin/dungeon-revealer-macos.zip
          asset_name: dungeon-revealer-macos-${{ env.GH_TAG }}.zip
          asset_content_type: application/zip

      - name: Upload Windows Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./bin/dungeon-revealer-windows.zip
          asset_name: dungeon-revealer-windows-${{ env.GH_TAG }}.zip
          asset_content_type: application/zip

      - name: Upload Linux ARM Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./bin/dungeon-revealer-linux-armv7.zip
          asset_name: dungeon-revealer-linux-armv7-${{ env.GH_TAG }}.zip
          asset_content_type: application/zip
