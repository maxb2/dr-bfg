name: Build Docker

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'


jobs:
  build_dev:
    name: Deploy dev
    if: startsWith(github.ref, 'refs/heads/') # Just the branches
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set environment
        run: |
          export TAG="${GITHUB_REF#'refs/tags/'}"
          echo "::set-env name=GH_TAG::$TAG"
          echo "::set-env name=DOCKER_REPO::${{ secrets.DOCKER_USERNAME }}/dungeon-revealer"

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Run Buildx
        run: |
          docker buildx build \
            --platform linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64 \
            --output "type=image,push=true" \
            -t $DOCKER_REPO:dev \
            -t $DOCKER_REPO:$GH_TAG \
            -t $DOCKER_REPO:latest ./

  build_tag:
    name: Deploy release
    if: startsWith(github.ref, 'refs/tags/') # Just the tags
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set environment
        run: |
          export TAG="${GITHUB_REF#'refs/tags/'}"
          echo "::set-env name=GH_TAG::$TAG"
          echo "::set-env name=DOCKER_REPO::${{ secrets.DOCKER_USERNAME }}/dungeon-revealer"

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Run Buildx
        run: |
          docker buildx build \
            --platform linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64 \
            --output "type=image,push=true" \
            -t $DOCKER_REPO:release \
            -t $DOCKER_REPO:$GH_TAG \
            -t $DOCKER_REPO:stable \
            -t $DOCKER_REPO:latest ./
