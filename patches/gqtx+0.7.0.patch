diff --git a/node_modules/gqtx/dist/build.js b/node_modules/gqtx/dist/build.js
index fb174fb..d9c03e8 100644
--- a/node_modules/gqtx/dist/build.js
+++ b/node_modules/gqtx/dist/build.js
@@ -15,7 +15,8 @@ function buildGraphQLSchema(schema) {
         mutation: schema.mutation &&
             toGraphQLOutputType(schema.mutation, typeMap),
         subscription: schema.subscription && toGraphQLSubscriptionObject(schema.subscription, typeMap),
-        types: schema.types && schema.types.map((type) => toGraphQLOutputType(type, typeMap))
+        types: schema.types && schema.types.map((type) => toGraphQLOutputType(type, typeMap)),
+        directives: schema.directives,
     });
 }
 exports.buildGraphQLSchema = buildGraphQLSchema;
@@ -140,6 +141,7 @@ function toGraphQLOutputType(t, typeMap) {
                             resolve: field.resolve,
                             args: toGraphQLArgs(field.args, typeMap),
                             deprecationReason: field.deprecationReason,
+                            extensions: field.extensions
                         };
                     });
                     return gqlFieldConfig;
diff --git a/node_modules/gqtx/dist/define.d.ts b/node_modules/gqtx/dist/define.d.ts
index da8e696..85309cb 100644
--- a/node_modules/gqtx/dist/define.d.ts
+++ b/node_modules/gqtx/dist/define.d.ts
@@ -25,6 +25,7 @@ export declare function createTypesFactory<Ctx = undefined>(): {
         args?: ArgMap<Arg> | undefined;
         description?: string | undefined;
         deprecationReason?: string | undefined;
+        extensions?: { [key: unknown]: unknown };
         resolve: (src: Src_4, args: TOfArgMap<ArgMap<Arg>>, ctx: Ctx, info: graphql.GraphQLResolveInfo) => Out | Promise<Out>;
     }): Field<Ctx, Src_4, any, any>;
     defaultField<Src_5 extends object, K extends keyof Src_5>(name: K, type: OutputType<Ctx, Src_5[K]>, opts?: {
diff --git a/node_modules/gqtx/dist/define.js b/node_modules/gqtx/dist/define.js
index 8900d2e..c996de4 100644
--- a/node_modules/gqtx/dist/define.js
+++ b/node_modules/gqtx/dist/define.js
@@ -56,7 +56,7 @@ function createTypesFactory() {
                 default: defaultArg,
             };
         },
-        field(name, { type, args = {}, resolve, description, deprecationReason, }) {
+        field(name, { type, args = {}, resolve, description, deprecationReason, extensions }) {
             return {
                 kind: 'Field',
                 name,
@@ -64,6 +64,7 @@ function createTypesFactory() {
                 description,
                 deprecationReason,
                 args,
+                extensions,
                 resolve,
             };
         },
diff --git a/node_modules/gqtx/dist/types.d.ts b/node_modules/gqtx/dist/types.d.ts
index 1e56fdb..2856acf 100644
--- a/node_modules/gqtx/dist/types.d.ts
+++ b/node_modules/gqtx/dist/types.d.ts
@@ -137,5 +137,6 @@ export declare type Schema<Ctx, RootSrc = undefined> = {
     mutation?: ObjectType<Ctx, RootSrc>;
     subscription?: SubscriptionObject<Ctx, RootSrc>;
     types?: ObjectType<Ctx, any>[];
+    directives?: graphql.GraphQLDirective[];
 };
 export {};
